<!doctype html>
<html>

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-1.11.1.js"></script>
<script>
    $(function() {
        webSocket = new WebSocket(`ws://${location.hostname}`);
        webSocket.onopen = function(event) {
            webSocket.send("Here's some text that the server is urgently awaiting!");
        };
        String.prototype.hashCode = function() {
            var hash = 0,
                i, chr;
            if (this.length === 0) return hash;
            for (i = 0; i < this.length; i++) {
                chr = this.charCodeAt(i);
                hash = ((hash << 5) - hash) + chr;
                hash |= 0; // Convert to 32bit integer
            }
            return hash;
        };
        /**
         * Source: http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/
         **/
        webSocket.onmessage = function(event) {
            message = JSON.parse(event.data).data
            $('#messages').append($('<li>').text("(" + message.user + ")" + message.msg));
            $('#messages').append($(`<button onClick=document.getElementById('` + message.msg.hashCode() + `').type='block'>key</button>`));
            //$('#messages').append($(`<input id='`+message.msg.substr(-3,3)+message.msg.substr(0,3)+`' type='hidden' value=`+message.signature+` readonly>`));
            $('#messages').append($(`<input id='` + message.msg.hashCode() + `' type='hidden' value=` + message.signature + ` readonly>`));
        }
        $('form').submit(function(e) {
            e.preventDefault(); // prevents page reloading
            var emitMsg = '{"msg":"' + $('#m').val() + '", "user":"' + $('#u').val() + '", "signature":"' + $('#ds').val() + '"}'
            webSocket.send(emitMsg);
            $('#m').val('');
            return false;
        });
    });
</script>

<head>
    <title>Chat blockchain</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font: 13px Helvetica, Arial;
            background-color: #ffdb58;
        }
        
        form {
            background: #160b30;
            padding: 3px;
            position: fixed;
            bottom: 0;
            width: 100%;
        }
        
        form input {
            border: 3;
            padding: 10px;
            width: 90%;
            margin-right: .5%;
            font-size: 20px;
        }
        
        form button {
            width: 9%;
            background: #fde910;
            border: none;
            cursor: pointer;
            padding: 10px;
            font-family: Oswald-Regular;
            font-size: 20px;
        }
        
        .user {
            width: 9%;
            border: 3;
            font-family: Oswald-Regular;
            font-size: 20px;
            position: relative;
            display: block;
            left: 91%;
        }
        
        #messages {
            list-style-type: none;
            margin: 0;
            padding: 0;
        }
        
        #messages li {
            padding: 5px 10px;
        }
        
        #messages li:nth-child(odd) {
            background: #eee;
        }
    </style>
</head>

<body>
    <ul id="messages"></ul>
    <form action="">
        <div class=user>
            <input id="u" placeholder="User" />

        </div>
        <input id="m" autofocus placeholder="Message" />
        <input id="ds" placeholder="Digital Signature" />



        <button>Enviar</button>
    </form>

</body>

</html>